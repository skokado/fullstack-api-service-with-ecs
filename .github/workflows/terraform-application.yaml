name: Terraform (application)

# ref. https://github.com/hashicorp/setup-terraform

on:
  push:
    branches:
      - main
      - dev
    paths:
      - 'terraform/application/**'
  pull_request:
    branches:
      - main
      - dev
    paths:
      - 'terraform/application/**'
      - '.github/workflows/terraform.yaml'

permissions:
  pull-requests: write
  id-token: write

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set working directory
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" && "${{ github.event.pull_request.base.ref }}" == "main" ]]; then
            echo "tf_actions_working_dir=terraform/application/envs/dev" >> $GITHUB_ENV
          fi

      # TODO switch multiple roles for dev/stg and prod
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4.3.1
        with:
          aws-region: ap-northeast-1
          role-to-assume: arn:aws:iam::891612552921:role/fsas-gha-executor-terraform

      - uses: hashicorp/setup-terraform@v3

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true
        working-directory: ${{ env.tf_actions_working_dir }}

      - name: Terraform Init
        id: init
        run: terraform init -input=false
        working-directory: ${{ env.tf_actions_working_dir }}

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
        working-directory: ${{ env.tf_actions_working_dir }}

      - name: Terraform Plan
        id: plan
        run: |
          terraform plan -no-color -input=false
          ls dummy
          echo "exitcode=$?" >> $GITHUB_OUTPUT
        continue-on-error: true
        working-directory: ${{ env.tf_actions_working_dir }}

      - uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            // 1. Retrieve existing bot comments for the PR
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            })
            const botComment = comments.find(comment => {
              return comment.user.type === 'Bot' && comment.body.includes('Terraform Format and Style')
            })

            // 2. Prepare format of the comment
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
            <details><summary>Validation Output</summary>

            \`\`\`\n
            ${{ steps.validate.outputs.stdout }}
            \`\`\`

            </details>

            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;

            // 3. If we have a comment, update it, otherwise create a new one
            if (botComment) {
              github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: output
              })
            } else {
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: output
              })
            }

      - name: "Terraform plan status"
        run: exit ${{ steps.plan.outputs.exitcode }}
